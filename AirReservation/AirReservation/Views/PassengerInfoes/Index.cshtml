@model PagedList.IPagedList<AirReservation.Models.PassengerInfo>
@using PagedList.Mvc;
<link href ="~/Content/PagedList.css" rel ="stylesheet" type ="text/css" />
@*@model IEnumerable<AirReservation.Models.PassengerInfo>*@

@{
    ViewBag.Title = "Passengers";
}
<style>
    body {
        background-image: url('../../Images/Slide/aeroplane.jpg');
        background-repeat: no-repeat;
        background-size: cover;
    }
</style>

<h1 style="text-align:center; color:white">Passenger Information</h1>

@using (Html.BeginForm("Index", "PassengerInfoes", FormMethod.Get))
{
    <div class="form-group">
        @Html.Label("Search Passengers: ", new { @class = "col-md-2 control-label", @style = "color: white"})
        <div class="col-md-6">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @style = "max-width:100%", @placeholder = "Search Passengers First Name or Date Of Birth here..." })
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-search"></span> Search</button>
        </div>
    </div>
}
<br />
<br />

<table class="table table-dark">
    <tr class="active">
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            @*@Html.DisplayNameFor(model => model.FirstName)*@
        </th>
        <th style="color:#3B7CB5">
            Last Name
            @*@Html.DisplayNameFor(model => model.LastName)*@
        </th>
        <th>
            @Html.ActionLink("Date Of Birth", "Index", new { sortOrder = ViewBag.DateSortParm })
            @*@Html.DisplayNameFor(model => model.DateOfBirth)*@
        </th>
        <th style="color:#3B7CB5">
            Age
            @*@Html.DisplayNameFor(model => model.Age)*@
        </th>
        <th style="color:#3B7CB5">
            Phone Number
            @*@Html.DisplayNameFor(model => model.PhoneNumber)*@
        </th>
        <th style="color:#3B7CB5">
            Email
            @*@Html.DisplayNameFor(model => model.Email)*@
        </th>
        <th style="color:#3B7CB5">
            Passport No
            @*@Html.DisplayNameFor(model => model.passportNo)*@
        </th>
        <th style="color:#3B7CB5">
            Images
            @*@Html.DisplayNameFor(model => model.ImageUrl)*@
        </th>
        <th style="color:#3B7CB5">Options</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr style="background-color:#212529; color:white; font-size:medium">
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Age)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.passportNo)
            </td>
            <td>
                <img src="@Url.Content(item.ImageUrl)" width="100" height="100" class="img-circle" />
                @*@Html.DisplayFor(modelItem => item.ImageUrl)*@
            </td>
            <td>
                <button type="button" class="btn btn-primary">@Html.ActionLink("Edit", "Edit", new { id = item.PassengerID }, new { @style = "color:white" })</button>
                <button type="button" class="btn btn-primary">@Html.ActionLink("Details", "Details", new { id = item.PassengerID }, new { @style="color:white" })</button>
                <button type="button" class="btn btn-primary">@Html.ActionLink("Delete", "Delete", new { id = item.PassengerID }, new { @style = "color:white" })</button>
            </td>
        </tr>
    }

</table>
<p>
    <button type="button" class="btn btn-primary">@Html.ActionLink("Create New", "Create", null, new { @style = "color:white" })</button>
</p>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, 
    currentFilter = ViewBag.CurrentFilter }))
